apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: todo
  description: The todos API
  tags:
    - todo
    - .net core web api
  links:
    - url: https://github.com/masagaribhai/Backstage-API-Templates
      title: GitHub Repo
      icon: github
    - url: https://github.com/masagaribhai/Backstage-API-Templates/blob/main/todo.yaml
      title: API Spec
      icon: code
spec:
  type: openapi
  lifecycle: experimental
  owner: makkaji
  definition: |
    openapi: "3.0.0"
    info:
      version: 1.0.0
      title: .Net Core Web API
      license:
        name: MIT
    servers:
      - url: https://localhost:44336
    paths:
      /todoitems:
        get:
          summary: List all todo items
          operationId: List
          tags:
            - todo items
          responses:
            '200':
              description: A array of todo items
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Todos"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
        post:
          summary: Create a todo item
          operationId: Create
          tags:
            - todo items
          responses:
            '201':
              description: Null response
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
      /todoitems/{id}:
        get:
          summary: Info for a specific todo item
          operationId: GetById
          tags:
            - todo items
          parameters:
            - name: id
              in: path
              required: true
              description: The id of the todo item to retrieve
              schema:
                type: string
          responses:
            '200':
              description: Expected response to a valid request
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Todo"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
    components:
      schemas:
        Todo:
          type: object
          required:
            - id
            - name
            - isComplete
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            isComplete:
              type: boolean
        Todos:
          type: array
          items:
            $ref: "#/components/schemas/Todo"
        Error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string